name: Wheels

on:
  pull_request:
  push:
env:
  REPO_DIR: pillow-avif-plugin
  BUILD_DEPENDS: ""
  TEST_DEPENDS: "pytest pillow"
  MACOSX_DEPLOYMENT_TARGET: "10.10"
  WHEEL_SDIR: wheelhouse
  CONFIG_PATH: pillow-avif-plugin/wheelbuild/config.sh
  LIBAVIF_VERSION: 0.10.1

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-native-wheels:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # - name: "macOS 10.10 x86_64"
          #   os: macos-13
          #   cibw_arch: x86_64
          #   build: "cp3{9,10,11}*"
          #   macosx_deployment_target: "10.10"
          #   dist_name: "macos-10.10-x86_64"
          # - name: "macOS 10.13 x86_64"
          #   os: macos-13
          #   cibw_arch: x86_64
          #   build: "cp3{12,13}*"
          #   macosx_deployment_target: "10.13"
          #   dist_name: "macos-10.13-x86_64"
          # - name: "macOS 10.15 x86_64"
          #   os: macos-13
          #   cibw_arch: x86_64
          #   build: "pp310*"
          #   macosx_deployment_target: "10.15"
          #   dist_name: "macos-10.15-x86_64"
          # - name: "macOS arm64"
          #   os: macos-latest
          #   cibw_arch: arm64
          #   macosx_deployment_target: "11.0"
          #   dist_name: "macos-11-arm64"
          - name: "manylinux2014 x86_64"
            os: ubuntu-latest
            cibw_arch: x86_64
            # build: "*manylinux*"
            build: "cp310-manylinux*"
            dist_name: "manylinux2014-x86_64"
          # - name: "musllinux x86_64"
          #   os: ubuntu-latest
          #   cibw_arch: x86_64
          #   build: "*musllinux*"
          #   dist_name: "musllinux-x86_64"
          # - name: "manylinux_2_28 x86_64"
          #   os: ubuntu-latest
          #   cibw_arch: x86_64
          #   build: "*manylinux*"
          #   manylinux: "manylinux_2_28"
          #   dist_name: "manylinux_2_28-x86_64"
          # - name: "manylinux2014 aarch64"
          #   os: ubuntu-24.04-arm
          #   cibw_arch: aarch64
          #   build: "*manylinux*"
          #   dist_name: "manylinux2014-aarch64"
          # - name: "musllinux aarch64"
          #   os: ubuntu-24.04-arm
          #   cibw_arch: aarch64
          #   build: "*musllinux*"
          #   dist_name: "musllinux-aarch64"
          # - name: "manylinux_2_28 aarch64"
          #   os: ubuntu-24.04-arm
          #   cibw_arch: aarch64
          #   build: "*manylinux*"
          #   manylinux: "manylinux_2_28"
          #   dist_name: "manylinux_2_28-aarch64"
    steps:
      - uses: actions/checkout@v4

      - name: Checkout multibuild
        uses: actions/checkout@v4
        with:
          repository: multi-build/multibuild
          path: multibuild
          ref: 42d761728d141d8462cd9943f4329f12fe62b155

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install cibuildwheel
        run: |
          python3 -m pip install -r .ci/requirements-cibw.txt

      - name: Build wheels
        run: |
          python3 -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ARCHS: ${{ matrix.cibw_arch }}
          CIBW_BUILD: ${{ matrix.build }}
          CIBW_ENABLE: cpython-prerelease cpython-freethreading pypy
          CIBW_MANYLINUX_AARCH64_IMAGE: ${{ matrix.manylinux }}
          CIBW_MANYLINUX_PYPY_X86_64_IMAGE: ${{ matrix.manylinux }}
          CIBW_MANYLINUX_PYPY_AARCH64_IMAGE: ${{ matrix.manylinux }}
          CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.manylinux }}
          MACOSX_DEPLOYMENT_TARGET: ${{ matrix.macosx_deployment_target }}
          CIBW_SKIP: "pp36-* pp37-* pp38-* cp36-* cp37-* cp38-* pp39-* pp311-*"

      - uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.dist_name }}
          path: ./wheelhouse/*.whl

  success:
    needs: [build-native-wheels]
    runs-on: ubuntu-latest
    name: Build Successful
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: dist-*
          path: dist
          merge-multiple: true
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: ./**/*.*
      - name: Upload Release
        uses: fnkr/github-action-ghr@v1.3
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GHR_PATH: .
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
